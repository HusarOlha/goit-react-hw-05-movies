{"version":3,"file":"static/js/42.44af5a09.chunk.js","mappings":"+LAEaA,E,QAAgBC,GAAAA,IAAH,8F,SCkB1B,EAjBe,WACb,OACE,SAACD,EAAD,WACE,SAAC,KAAD,CACEE,OAAO,KACPC,MAAM,KACNC,OAAO,KACPC,MAAM,QACNC,UAAU,qBACVC,aAAc,CAAC,EACfC,iBAAiB,GACjBC,SAAS,KAIhB,C,oGChBYC,EAAgBT,EAAAA,EAAAA,IAAH,sBAEbU,EAAWV,EAAAA,EAAAA,GAAH,+HAORW,EAAWX,EAAAA,EAAAA,GAAH,gIAQRY,EAAQZ,EAAAA,EAAAA,IAAH,0IAgBLa,GARYb,EAAAA,EAAAA,GAAH,2JAQFA,EAAAA,EAAAA,GAAH,gJ,SCzBJc,EAAY,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACjC,OACE,SAACP,EAAD,WACE,SAACE,EAAD,UACGI,EAAME,KAAI,SAAAC,GAAI,OACb,UAACL,EAAD,YACE,SAACH,EAAD,UAAWQ,EAAKC,SAChB,SAAC,KAAD,CAAMC,GAAE,kBAAaF,EAAKG,IAAMC,MAAO,CAAEC,KAAMP,GAA/C,UACE,SAACJ,EAAD,CACEY,IAAG,yCAAoCN,EAAKO,aAC5CC,IAAKR,EAAKC,YALLD,EAAKG,GADH,OActB,C,iMC1BKM,EAAW,8BACXC,EAAU,mCAEHC,EAAY,mCAAG,oGACHC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,0BAA+C,CACpEI,OAAQ,CACNC,QAASJ,EACTK,KAAM,EACNC,SAAU,WALY,cACpBC,EADoB,yBAQnBA,EAASC,MARU,2CAAH,qDAWZC,EAAgB,mCAAG,WAAMhB,GAAN,uFACPS,EAAAA,EAAAA,IAAA,UAAaH,EAAb,oBAAiCN,GAAM,CAC5DU,OAAQ,CACNC,QAASJ,EACTM,SAAU,WAJgB,cACxBC,EADwB,yBAOvBA,EAASC,MAPc,2CAAH,sDAUhBE,EAAO,mCAAG,WAAMjB,GAAN,uFACES,EAAAA,EAAAA,IAAA,UAClBH,EADkB,oBACEN,EADF,4BACwBO,EADxB,oBADF,cACfO,EADe,yBAIdA,EAASC,KAAKG,MAJA,2CAAH,sDAOPC,EAAU,mCAAG,WAAMnB,GAAN,uFACDS,EAAAA,EAAAA,IAAA,UAClBH,EADkB,oBACEN,EADF,4BACwBO,EADxB,oBADC,cAClBO,EADkB,yBAKjBA,EAASC,KAAKK,SALG,2CAAH,sDAQVC,EAAiB,mCAAG,WAAOC,EAAOV,GAAd,uFACRH,EAAAA,EAAAA,IAAA,UAClBH,EADkB,mCACiBC,EADjB,kBACkCe,EADlC,kBACiDV,EADjD,wCADQ,cACzBE,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,uD,gKCvCjBQ,EAAgB5C,EAAAA,EAAAA,QAAH,uRAcb6C,GAAa7C,EAAAA,EAAAA,GAAO8C,EAAAA,GAAP9C,CAAH,+KAUV+C,EAAe/C,EAAAA,EAAAA,OAAH,6WAcZgD,EAAoBhD,EAAAA,EAAAA,KAAH,6MAYjBiD,GAAcjD,EAAAA,EAAAA,GAAOkD,EAAAA,GAAPlD,CAAH,wL,SCzClBmD,EAAgB,CACpBC,MAAO,IA0CT,EAvCkB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAUnB,OACE,SAACT,EAAD,WACE,SAAC,KAAD,CAAQO,cAAeA,EAAeE,SAXrB,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UACzBD,EAAOF,MAAMI,QAGhBH,EAASC,EAAOF,OAChBG,KAHAE,EAAAA,GAAAA,MAAY,8BAKf,EAIG,SACG,gBAAGC,EAAH,EAAGA,aAAH,OACC,UAACb,EAAD,CAAYQ,SAAUK,EAAtB,WACE,SAACX,EAAD,CAAcY,KAAK,SAASC,UAAU,SAAtC,UACE,SAACZ,EAAD,CAAmBY,UAAU,0BAA7B,qBAKF,SAACX,EAAD,CACEU,KAAK,OACLE,KAAK,QACLC,WAAS,EACTC,YAAY,eACZC,aAAa,UAblB,KAoBR,E,0DCkCD,EA1Ee,WAAO,IAAD,EACnB,GAAwBC,EAAAA,EAAAA,UAAS,GAAjC,eAAOhC,EAAP,KAAaiC,EAAb,KACA,GAAoCD,EAAAA,EAAAA,UAAS,IAA7C,eAAOE,EAAP,KAAmBC,EAAnB,KACA,GAA8BH,EAAAA,EAAAA,WAAS,GAAvC,eAAOI,EAAP,KAAgBC,EAAhB,KACA,GAA0BL,EAAAA,EAAAA,UAAS,MAAnC,eAAOM,EAAP,KAAcC,EAAd,KACA,GAA4BP,EAAAA,EAAAA,UAAS,QAArC,eAAOQ,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAS,UAAGF,EAAaG,IAAI,eAApB,QAA+B,GAExC/D,GAAWgE,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACRX,GAAW,GACXI,EAAU,WACV,IAAMQ,EAAkB,IAAIC,gBACtBC,EAAmB,mCAAG,gGAEnBN,EAFmB,uBAGtBR,GAAW,GACXI,EAAU,QAJY,2CAQLhC,EAAAA,EAAAA,IAAkBoC,EAAW7C,EAAMiD,GAR9B,OAQlBG,EARkB,OAUxBjB,EAAciB,EAAK5C,SACnB6B,GAAW,GACXI,EAAU,aAEkB,IAAxBW,EAAK5C,QAAQ6C,QACf7B,EAAAA,GAAAA,MAAY,qDAfU,kDAkBxBe,EAAS,EAAD,IACRF,GAAW,GACXI,EAAU,UApBc,0DAAH,qDAyBzB,OADAU,IACO,WACLF,EAAgBK,OACjB,CACF,GAAE,CAACtD,EAAM6C,IAUV,MAAe,YAAXL,GAAwBJ,GACnB,SAACmB,EAAA,EAAD,IAGM,WAAXf,GACFgB,QAAQC,IAAInB,EAAMoB,UACX,qCAAapB,EAAMoB,aAI1B,2BACGpB,GAA2B,UAAlBA,EAAMoB,UACd,gDAAwBpB,EAAMoB,QAA9B,2BAEF,SAAC,EAAD,CAAWvC,MAAO0B,EAAWzB,SAtBP,SAAAQ,GAExBgB,EAD2B,KAAThB,EAAc,CAAEA,KAAAA,GAAS,CAAC,GAG5CO,EAAc,IACdF,EAAQ,EACT,KAiBG,SAACpD,EAAA,EAAD,CAAWC,MAAOoD,EAAYnD,SAAU,CAAEO,KAAMP,OAGrD,C","sources":["components/Loader/Loader.styled.js","components/Loader/Loader.jsx","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","components/Services/GetMovie.js","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","pages/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const LoaderWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n","import { ThreeDots } from 'react-loader-spinner';\nimport { LoaderWrapper } from './Loader.styled';\n\nconst Loader = () => {\n  return (\n    <LoaderWrapper>\n      <ThreeDots\n        height=\"80\"\n        width=\"80\"\n        radius=\"13\"\n        color=\"white\"\n        ariaLabel=\"three-dots-loading\"\n        wrapperStyle={{}}\n        wrapperClassName=\"\"\n        visible={true}\n      />\n    </LoaderWrapper>\n  );\n};\n\nexport default Loader;\n","import styled from '@emotion/styled';\n\nexport const ListContainer = styled.div``;\n\nexport const ListText = styled.h2`\n  color: white;\n  margin-bottom: 20px;\n  font-size: 18px;\n  font-family: 'Montserrat', sans-serif;\n`;\n\nexport const ListItem = styled.ul`\n  text-align: center;\n\n  grid-gap: 20px;\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n`;\n\nexport const Image = styled.img`\n  transition: transform 0.3s ease-in-out;\n  border-radius: 5px;\n\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\nexport const ListTitle = styled.h1`\n  text-align: center;\n  margin-bottom: 20px;\n  margin-top: 20px;\n  font-family: 'Montserrat', sans-serif;\n  line-height: 1.4;\n`;\n\nexport const List = styled.li`\n  padding: 20px;\n  border-radius: 10px;\n  border: 1px solid white;\n  &:hover {\n    border: 1px solid yellow;\n  }\n`;\n","import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  ListContainer,\n  ListItem,\n  ListText,\n  Image,\n  List,\n} from './MovieList.styled';\n\nexport const MovieList = ({ items, location }) => {\n  return (\n    <ListContainer>\n      <ListItem>\n        {items.map(item => (\n          <List key={item.id}>\n            <ListText>{item.title}</ListText>\n            <Link to={`/movies/${item.id}`} state={{ from: location }}>\n              <Image\n                src={`https://image.tmdb.org/t/p/w200${item.poster_path}`}\n                alt={item.title}\n              />\n            </Link>\n          </List>\n        ))}\n      </ListItem>\n    </ListContainer>\n  );\n};\nMovieList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/';\nconst API_KEY = '5aaf87e447efebf6d5c12466ddbc5de2';\n\nexport const GetMovieHome = async () => {\n  const response = await axios.get(`${BASE_URL}/3/trending/movie/day?`, {\n    params: {\n      api_key: API_KEY,\n      page: 1,\n      language: 'en-US',\n    },\n  });\n  return response.data;\n};\n\nexport const GetFullInfoMovie = async id => {\n  const response = await axios.get(`${BASE_URL}/3/movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  return response.data;\n};\n\nexport const GetCast = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const GetReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data.results;\n};\n\nexport const GetMoviesBySearch = async (query, page) => {\n  const response = await axios.get(\n    `${BASE_URL}/3/search/movie?api_key=${API_KEY}&query=${query}'&page=${page}&language=en-US&include_adult=false`\n  );\n  return response.data;\n};\n","import styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\nexport const SearchSection = styled.section`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: black;\n\n  margin-bottom: 30px;\n`;\nexport const SearchForm = styled(Form)`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 20px;\n  overflow: hidden;\n`;\n\nexport const SearchButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-image: url('https://svgsilh.com/svg/159582.svg');\n  background-size: 60%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n`;\nexport const SearchButtonLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n\nexport const SearchInput = styled(Field)`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n`;\n","import { Formik } from 'formik';\nimport { toast } from 'react-hot-toast';\nimport PropTypes from 'prop-types';\nimport {\n  SearchForm,\n  SearchButton,\n  SearchInput,\n  SearchSection,\n  SearchButtonLabel,\n} from './SearchForm.styled';\n\nconst initialValues = {\n  value: '',\n};\n\nconst SearchBar = ({ onSubmit }) => {\n  const handleSubmit = (values, { resetForm }) => {\n    if (!values.value.trim()) {\n      toast.error('Please enter a search query');\n    } else {\n      onSubmit(values.value);\n      resetForm();\n    }\n  };\n\n  return (\n    <SearchSection>\n      <Formik initialValues={initialValues} onSubmit={handleSubmit}>\n        {({ handleSubmit }) => (\n          <SearchForm onSubmit={handleSubmit}>\n            <SearchButton type=\"submit\" className=\"button\">\n              <SearchButtonLabel className=\"SearchForm-button-label\">\n                Find\n              </SearchButtonLabel>\n            </SearchButton>\n\n            <SearchInput\n              type=\"text\"\n              name=\"value\"\n              autoFocus\n              placeholder=\"Search movie\"\n              autoComplete=\"off\"\n            />\n          </SearchForm>\n        )}\n      </Formik>\n    </SearchSection>\n  );\n};\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default SearchBar;\n","import SearchBar from 'components/SearchForm';\nimport { useState, useEffect } from 'react';\nimport { GetMoviesBySearch } from 'components/Services/GetMovie';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport Loader from 'components/Loader/Loader';\nimport { toast } from 'react-hot-toast';\nimport { useSearchParams, useLocation } from 'react-router-dom';\n\nconst Movies = () => {\n  const [page, setPage] = useState(1);\n  const [movieItems, setMovieItems] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState('idle');\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const movieName = searchParams.get('name') ?? '';\n\n  const location = useLocation();\n\n  useEffect(() => {\n    setLoading(true);\n    setStatus('loading');\n    const abortController = new AbortController();\n    const fetchMoviesBySearch = async () => {\n      try {\n        if (!movieName) {\n          setLoading(false);\n          setStatus('idle');\n          return;\n        }\n\n        const resp = await GetMoviesBySearch(movieName, page, abortController);\n\n        setMovieItems(resp.results);\n        setLoading(false);\n        setStatus('succeeded');\n\n        if (resp.results.length === 0) {\n          toast.error('Sorry, we cannot find any movies for your search.');\n        }\n      } catch (error) {\n        setError(error);\n        setLoading(false);\n        setStatus('failed');\n      }\n    };\n\n    fetchMoviesBySearch();\n    return () => {\n      abortController.abort();\n    };\n  }, [page, movieName]);\n\n  const updateQueryString = name => {\n    const newParams = name !== '' ? { name } : {};\n    setSearchParams(newParams);\n\n    setMovieItems([]);\n    setPage(1);\n  };\n\n  if (status === 'loading' && loading) {\n    return <Loader />;\n  }\n\n  if (status === 'failed') {\n    console.log(error.message);\n    return <div>Error: {error.message}</div>;\n  }\n\n  return (\n    <div>\n      {error && error.message !== 'error' && (\n        <p>Sorry we have error:{error.message} please reload page!</p>\n      )}\n      <SearchBar value={movieName} onSubmit={updateQueryString} />\n      <MovieList items={movieItems} location={{ from: location }} />\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["LoaderWrapper","styled","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","ListContainer","ListText","ListItem","Image","List","MovieList","items","location","map","item","title","to","id","state","from","src","poster_path","alt","BASE_URL","API_KEY","GetMovieHome","axios","params","api_key","page","language","response","data","GetFullInfoMovie","GetCast","cast","GetReviews","results","GetMoviesBySearch","query","SearchSection","SearchForm","Form","SearchButton","SearchButtonLabel","SearchInput","Field","initialValues","value","onSubmit","values","resetForm","trim","toast","handleSubmit","type","className","name","autoFocus","placeholder","autoComplete","useState","setPage","movieItems","setMovieItems","loading","setLoading","error","setError","status","setStatus","useSearchParams","searchParams","setSearchParams","movieName","get","useLocation","useEffect","abortController","AbortController","fetchMoviesBySearch","resp","length","abort","Loader","console","log","message"],"sourceRoot":""}