{"version":3,"file":"static/js/935.ea195651.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.js","components/Loader/Loader.jsx","components/Services/GetMovie.js","components/TrendingMovie/TrendingMovie.styled.js","components/TrendingMovie/TrendingMovie.jsx","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","pages/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const LoaderWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n","import { ThreeDots } from 'react-loader-spinner';\nimport { LoaderWrapper } from './Loader.styled';\n\nconst Loader = () => {\n  return (\n    <LoaderWrapper>\n      <ThreeDots\n        height=\"80\"\n        width=\"80\"\n        radius=\"13\"\n        color=\"white\"\n        ariaLabel=\"three-dots-loading\"\n        wrapperStyle={{}}\n        wrapperClassName=\"\"\n        visible={true}\n      />\n    </LoaderWrapper>\n  );\n};\n\nexport default Loader;\n","import axios from 'axios';\n\nconst API_KEY = '5aaf87e447efebf6d5c12466ddbc5de2';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const GetTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\nexport const GetMoviesBySearch = async (query, page) => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}'&page=${page}&include_adult=false`\n  );\n  return response.data;\n};\n\nexport const GetFullInfoMovie = async id => {\n  const response = await axios.get(\n    `movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const GetCast = async id => {\n  const response = await axios.get(\n    `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const GetReviews = async id => {\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.results;\n};\n\n// export const GetFullInfoMovie = async id => {\n//   const response = await axios.get(`${BASE_URL}/3/movie/${id}`, {\n//     params: {\n//       api_key: API_KEY,\n//       language: 'en-US',\n//     },\n//   });\n//   return response.data;\n// };\n\n// export const GetCast = async id => {\n//   const response = await axios.get(\n//     `${BASE_URL}/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n//   );\n//   return response.data.cast;\n// };\n\n// export const GetReviews = async id => {\n//   const response = await axios.get(\n//     `${BASE_URL}/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n//   );\n\n//   return response.data.results;\n// };\n\n// export const GetMoviesBySearch = async (query, page) => {\n//   const response = await axios.get(\n//     `${BASE_URL}/3/search/movie?api_key=${API_KEY}&query=${query}&page=${page}&language=en-US&include_adult=false`\n//   );\n//   return response.data;\n// };\n","import styled from '@emotion/styled';\n\nexport const ListContainer = styled.div`\n  grid-gap: 20px;\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n`;\n\nexport const ListText = styled.h2`\n  color: white;\n  margin-bottom: 20px;\n  font-size: 18px;\n  font-family: 'Montserrat', sans-serif;\n`;\n\nexport const ListItem = styled.ul`\n  padding: 20px;\n  text-align: center;\n  border-radius: 10px;\n  border: 1px solid white;\n  &:hover {\n    border: 1px solid yellow;\n  }\n`;\n\nexport const Image = styled.img`\n  transition: transform 0.3s ease-in-out;\n  border-radius: 5px;\n\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\nexport const ListTitle = styled.h1`\n  text-align: center;\n  margin-bottom: 20px;\n  margin-top: 20px;\n  font-family: 'Montserrat', sans-serif;\n  line-height: 1.4;\n`;\n","import { Link } from 'react-router-dom';\nimport {\n  ListContainer,\n  ListItem,\n  ListText,\n  Image,\n  ListTitle,\n} from './TrendingMovie.styled';\nconst TrendingMovieList = ({ trendMovies }) => {\n  console.log(trendMovies.results);\n  const movies = trendMovies.results;\n  return (\n    <ListContainer>\n      <ListTitle>Trending today</ListTitle>\n      {movies.map(movie => (\n        <ListItem key={movie.id}>\n          <li key={movie.id}>\n            <ListText>{movie.title}</ListText>\n            <Link to={`/movies/${movie.id}`}>\n              <Image\n                src={`https://image.tmdb.org/t/p/w200${movie.poster_path}`}\n                alt={movie.title}\n              />\n            </Link>\n          </li>\n        </ListItem>\n      ))}\n    </ListContainer>\n  );\n};\n\nexport default TrendingMovieList;\n","import styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\nexport const SearchSection = styled.section`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: black;\n\n  margin-bottom: 30px;\n`;\nexport const SearchForm = styled(Form)`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 20px;\n  overflow: hidden;\n`;\n\nexport const SearchButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-image: url('https://svgsilh.com/svg/159582.svg');\n  background-size: 60%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n`;\nexport const SearchButtonLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n\nexport const SearchInput = styled(Field)`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n`;\n","import { Formik } from 'formik';\nimport { toast } from 'react-hot-toast';\nimport {\n  SearchForm,\n  SearchButton,\n  SearchInput,\n  SearchSection,\n  SearchButtonLabel,\n} from './SearchForm.styled';\n\nconst initialValues = {\n  value: '',\n};\n\nconst SearchBar = ({ onSearch }) => {\n  const handleSubmit = (values, { resetForm }) => {\n    if (!values.value.trim()) {\n      toast.error('Please enter a search query');\n    } else {\n      onSearch(values.value);\n      resetForm();\n    }\n  };\n\n  return (\n    <SearchSection>\n      <Formik initialValues={initialValues} onSubmit={handleSubmit}>\n        {({ handleSubmit }) => (\n          <SearchForm onSubmit={handleSubmit}>\n            <SearchButton type=\"submit\" className=\"button\">\n              <SearchButtonLabel className=\"SearchForm-button-label\">\n                Find\n              </SearchButtonLabel>\n            </SearchButton>\n\n            <SearchInput\n              type=\"text\"\n              name=\"value\"\n              autoFocus\n              placeholder=\"Search movie\"\n              autoComplete=\"off\"\n            />\n          </SearchForm>\n        )}\n      </Formik>\n    </SearchSection>\n  );\n};\n\nexport default SearchBar;\n","import SearchBar from 'components/SearchForm';\nimport { useState, useEffect } from 'react';\nimport { GetMoviesBySearch } from 'components/Services/GetMovie';\nimport MovieList from 'components/TrendingMovie';\nimport Loader from 'components/Loader/Loader';\nimport { toast } from 'react-hot-toast';\n\nconst Movies = () => {\n  const [page, setPage] = useState(1);\n  const [query, setQuery] = useState('');\n  const [movieItems, setMovieItems] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState('idle');\n\n  function handleSubmit(newQuery) {\n    setQuery(newQuery);\n    setPage(1);\n  }\n\n  useEffect(() => {\n    setLoading(true);\n    setStatus('loading');\n\n    const fetchMoviesBySearch = async () => {\n      try {\n        if (!query.trim()) {\n          setLoading(false);\n          setStatus('idle');\n          return;\n        }\n\n        const resp = await GetMoviesBySearch(query, page);\n\n        setMovieItems(resp.results);\n        setLoading(false);\n        setStatus('succeeded');\n\n        if (resp.results.length === 0) {\n          toast.error('Sorry, we cannot find any movies for your search.');\n        }\n      } catch (error) {\n        setError(error);\n        setLoading(false);\n        setStatus('failed');\n      }\n    };\n\n    fetchMoviesBySearch();\n  }, [page, query]);\n\n  if (status === 'loading' && loading) {\n    return <Loader />;\n  }\n\n  if (status === 'failed') {\n    return <div>Error: {error.message}</div>;\n  }\n\n  return (\n    <div>\n      <SearchBar onSearch={handleSubmit} />\n      <MovieList items={movieItems} />\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["LoaderWrapper","styled","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","API_KEY","axios","GetTrendingMovies","response","data","GetMoviesBySearch","query","page","GetFullInfoMovie","id","GetCast","cast","GetReviews","results","ListContainer","ListText","ListItem","Image","ListTitle","trendMovies","console","log","movies","map","movie","title","to","src","poster_path","alt","SearchSection","SearchForm","Form","SearchButton","SearchButtonLabel","SearchInput","Field","initialValues","value","onSearch","onSubmit","values","resetForm","trim","toast","handleSubmit","type","className","name","autoFocus","placeholder","autoComplete","useState","setPage","setQuery","movieItems","setMovieItems","loading","setLoading","error","setError","status","setStatus","useEffect","fetchMoviesBySearch","resp","length","Loader","message","newQuery","items"],"sourceRoot":""}