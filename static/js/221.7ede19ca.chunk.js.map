{"version":3,"file":"static/js/221.7ede19ca.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.js","components/Loader/Loader.jsx","components/Services/GetMovie.js","components/MovieDescription/MovieDescription.styled.jsx","components/MovieDescription/MovieDescription.jsx","components/BackLink/Backlink.styled.js","components/BackLink/BackLink.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const LoaderWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n","import { ThreeDots } from 'react-loader-spinner';\nimport { LoaderWrapper } from './Loader.styled';\n\nconst Loader = () => {\n  return (\n    <LoaderWrapper>\n      <ThreeDots\n        height=\"80\"\n        width=\"80\"\n        radius=\"13\"\n        color=\"white\"\n        ariaLabel=\"three-dots-loading\"\n        wrapperStyle={{}}\n        wrapperClassName=\"\"\n        visible={true}\n      />\n    </LoaderWrapper>\n  );\n};\n\nexport default Loader;\n","import axios from 'axios';\n\nconst API_KEY = '5aaf87e447efebf6d5c12466ddbc5de2';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const GetTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\nexport const GetMoviesBySearch = async (query, page) => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}'&page=${page}&include_adult=false`\n  );\n  return response.data;\n};\n\nexport const GetFullInfoMovie = async id => {\n  const response = await axios.get(\n    `movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const GetCast = async id => {\n  const response = await axios.get(\n    `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const GetReviews = async id => {\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.results;\n};\n\n// export const GetFullInfoMovie = async id => {\n//   const response = await axios.get(`${BASE_URL}/3/movie/${id}`, {\n//     params: {\n//       api_key: API_KEY,\n//       language: 'en-US',\n//     },\n//   });\n//   return response.data;\n// };\n\n// export const GetCast = async id => {\n//   const response = await axios.get(\n//     `${BASE_URL}/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n//   );\n//   return response.data.cast;\n// };\n\n// export const GetReviews = async id => {\n//   const response = await axios.get(\n//     `${BASE_URL}/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n//   );\n\n//   return response.data.results;\n// };\n\n// export const GetMoviesBySearch = async (query, page) => {\n//   const response = await axios.get(\n//     `${BASE_URL}/3/search/movie?api_key=${API_KEY}&query=${query}&page=${page}&language=en-US&include_adult=false`\n//   );\n//   return response.data;\n// };\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const Container = styled.div`\n  margin: 0px auto 40px;\n\n  margin-top: 20px;\n  max-width: 1200px;\n  padding: 10px;\n`;\n\nexport const Poster = styled.img`\n  width: 300px;\n  height: auto;\n  margin-right: 20px;\n`;\n\nexport const ContainerInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  width: 500px;\n`;\n\nexport const Title = styled.h1`\n  font-size: 24px;\n  margin-bottom: 10px;\n  font-family: 'Montserrat', sans-serif;\n  line-height: 1.4;\n`;\n\nexport const Score = styled.p`\n  font-family: 'Montserrat', sans-serif;\n  line-height: 1.4;\n`;\n\nexport const SectionTitle = styled.h2`\n  font-size: 18px;\n\n  font-family: 'Montserrat', sans-serif;\n  line-height: 1.4;\n`;\n\nexport const Overview = styled.p`\n  font-family: 'Montserrat', sans-serif;\n  line-height: 1.4;\n`;\n\nexport const Genres = styled.div`\n  font-family: 'Montserrat', sans-serif;\n  line-height: 1.4;\n  display: flex;\n  gap: 30px;\n  color: white;\n\n  & > span {\n    border: 1px solid white;\n    padding: 10px;\n\n    border-radius: 10px;\n  }\n`;\n\nexport const AdditionalInfo = styled.div`\n  margin-top: 40px;\n  font-family: 'Montserrat', sans-serif;\n  line-height: 1.4;\n  font-size: 20px;\n`;\n\nexport const AdditionalInfoTitle = styled.h2`\n  font-size: 18px;\n  margin-bottom: 10px;\n  font-family: 'Montserrat', sans-serif;\n  line-height: 1.4;\n  font-size: 20px;\n`;\n\nexport const InfoLink = styled(NavLink)`\n  margin-bottom: 5px;\n  color: white;\n  text-decoration: underline;\n  cursor: pointer;\n  border: 1px solid white;\n  padding: 10px;\n  box-shadow: 0 0 20px #eee;\n  border-radius: 20px;\n  text-decoration: none;\n   &:hover {\n    background-position: right center; \n    color: #fff;\n    text-decoration: none;\n     border: 1px solid yellow;\n    \n  }\n  &.active {\n    color: yellow;\n    border: 1px solid yellow;\n`;\nexport const ContainerPoster = styled.div`\n  display: flex;\n`;\nexport const List = styled.ul`\n  display: flex;\n  gap: 30px;\n`;\n","import { Outlet } from 'react-router-dom';\nimport {\n  Container,\n  Poster,\n  Title,\n  Score,\n  SectionTitle,\n  Overview,\n  Genres,\n  AdditionalInfo,\n  AdditionalInfoTitle,\n  InfoLink,\n  ContainerInfo,\n  ContainerPoster,\n  List,\n} from './MovieDescription.styled';\n\nconst MovieDescription = ({ movie }) => {\n  return (\n    <Container>\n      <ContainerPoster>\n        <Poster\n          src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n          alt={movie.title}\n        />\n        <ContainerInfo>\n          <Title>{movie.title}</Title>\n          <Score>‚≠ê {Math.round(movie.vote_average * 10)}%</Score>\n          <SectionTitle>Overview</SectionTitle>\n          <Overview>{movie.overview}</Overview>\n          <SectionTitle>Genres</SectionTitle>\n          <Genres>\n            {movie.genres.map(genre => (\n              <span key={genre.id}>{genre.name}</span>\n            ))}\n          </Genres>\n        </ContainerInfo>\n      </ContainerPoster>\n      <AdditionalInfo>\n        <AdditionalInfoTitle>Additional information</AdditionalInfoTitle>\n        <List>\n          <InfoLink to=\"cast\">Cast</InfoLink>\n          <InfoLink to=\"reviews\">Reviews</InfoLink>\n        </List>\n        <Outlet></Outlet>\n      </AdditionalInfo>\n    </Container>\n  );\n};\n\nexport default MovieDescription;\n","import { Link } from 'react-router-dom';\nimport styled from '@emotion/styled';\n\nexport const ArrowLink = styled.span`\n  vertical-align: middle;\n  margin-left: 10px;\n\n  display: inline-block;\n  width: 0;\n  height: 0;\n  border-top: 10px solid transparent;\n  border-right: 10px solid white;\n  border-bottom: 10px solid transparent;\n  color: white;\n`;\n\nexport const StyledLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  width: 100px;\n  gap: 4px;\n  padding: 8px 0;\n  color: white;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n  margin-top: 10px;\n\n  &:hover {\n    box-shadow: 0 0 20px yellow;\n    border-radius: 20px;\n  }\n`;\n","import { StyledLink, ArrowLink } from './Backlink.styled';\n\nconst BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <ArrowLink />\n      {children}\n    </StyledLink>\n  );\n};\nexport default BackLink;\n","import { useEffect, useState, useRef } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { GetFullInfoMovie } from 'components/Services/GetMovie';\nimport MovieDescription from 'components/MovieDescription/MovieDescription';\nimport BackLink from 'components/BackLink';\nimport styled from '@emotion/styled';\nimport Loader from 'components/Loader';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState('idle');\n\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    setStatus('loading');\n    const fetchMovieDetails = async () => {\n      try {\n        const response = await GetFullInfoMovie(movieId);\n        setMovie(response);\n        setStatus('success');\n      } catch (error) {\n        setError(error);\n        setStatus('error');\n      }\n    };\n    fetchMovieDetails();\n  }, [movieId]);\n\n  if (status === 'idle' || status === 'loading') {\n    return <Loader />;\n  }\n\n  if (status === 'error') {\n    return <div>Error: {error.message}</div>;\n  }\n\n  return (\n    <Main>\n      <BackLink to={backLinkLocationRef.current}> Back </BackLink>\n      <MovieDescription movie={movie} />\n    </Main>\n  );\n};\n\nconst Main = styled.main`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 0 16px;\n`;\n\nexport default MovieDetails;\n"],"names":["LoaderWrapper","styled","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","API_KEY","axios","GetTrendingMovies","response","data","GetMoviesBySearch","query","page","GetFullInfoMovie","id","GetCast","cast","GetReviews","results","Container","Poster","ContainerInfo","Title","Score","SectionTitle","Overview","Genres","AdditionalInfo","AdditionalInfoTitle","InfoLink","NavLink","ContainerPoster","List","movie","src","poster_path","alt","title","Math","round","vote_average","overview","genres","map","genre","name","to","ArrowLink","StyledLink","Link","children","Main","movieId","useParams","useState","setMovie","error","setError","status","setStatus","location","useLocation","backLinkLocationRef","useRef","state","from","useEffect","fetchMovieDetails","Loader","message","current"],"sourceRoot":""}